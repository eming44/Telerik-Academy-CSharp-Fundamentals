01. Allocate array------------------------------------

using System;


class Program
{
    static void Main()
    {
        int n = int.Parse(Console.ReadLine());
        int[] number = new int[n];

        for (int i = 0; i < n ; i++)
        {
            number[i] = i * 5;
            Console.WriteLine(number[i]);
        }

       
    }
}

02. Compare arrays------------------------------------

using System;
using System.Linq;



class Program
{
    static void Main()
    {
        int n = int.Parse(Console.ReadLine());
        int[] arr1 = new int[n];
        int[] arr2 = new int[n];


        for (int i = 0; i < n ; i++)
        {
            arr1[i] = int.Parse(Console.ReadLine());
            
        }

        for (int i = 0; i < n; i++)
        {
            arr2[i] = int.Parse(Console.ReadLine());
        }

        bool equal = arr1.SequenceEqual(arr2);

        Console.WriteLine("{0}", equal ? "Equal" : "Not equal");
    }
}

03. Compare char arrays-----------------------70/100------------------------

using System;
    class MainClass
    {
        public static void Main()
        {
            string wordOne = Console.ReadLine();
            var charArrOne = wordOne.ToCharArray();
            string wordTwo = Console.ReadLine();
            var charArrTwo = wordTwo.ToCharArray();
            int minimalLength = Math.Min(charArrOne.Length, charArrTwo.Length);

            if (charArrOne.Length >= 1 && charArrOne.Length <= 128 && charArrTwo.Length >= 1 && charArrTwo.Length <= 128)
            {
                int arrOneLength = charArrOne.Length;
                int arrTwoLength = charArrTwo.Length;

                if (arrOneLength > arrTwoLength)
                {
                    Console.WriteLine(">");
                }

                if (arrOneLength < arrTwoLength)
                {
                    Console.WriteLine("<");
                }

                if (arrOneLength == arrTwoLength)
                {
                    int count = 0;
                    for (int i = 0; i < minimalLength; i++)
                    {
                        if (charArrOne[i] > charArrTwo[i])
                        {
                            Console.WriteLine(">");
                        }

                        if (charArrOne[i] < charArrTwo[i])
                        {
                            Console.WriteLine("<");
                        }

                        if (charArrOne[i] == charArrTwo[i])
                        {
                            count++;
                        }

                        if (count == minimalLength)
                        {
                            Console.WriteLine("=");
                        }
                    }
                }
            }
            else { }
        }
    }


04. Maximal sequence---------------------------------------------

using System;

class Program
{
    static void Main()
    {
        int n = int.Parse(Console.ReadLine());
        int[] arr = new int[n];
        int maxCount = 0;
        int currentCount = 1;
       
        for (int i = 0; i < n; i++)
        {
            arr[i] = int.Parse(Console.ReadLine());
            if (i != 0)
            {
                if (arr[i] == arr[i - 1])
                {
                    currentCount++;
                }
                else
                {
                    currentCount = 1;
                }
                if (currentCount > maxCount)
                {
                    maxCount = currentCount;  
                }
            }
        }
        Console.WriteLine(maxCount);
        }
    }

05. Maximal increasing sequence-------------------------------------

using System;

class Program
{
    static void Main()
    {
        int n = int.Parse(Console.ReadLine());
        int[] arr = new int[n];
        int maxCount = 0;
        int currentCount = 1;

        if (n >= 1 && n <= 1024)
        {
            for (int i = 0; i < n; i++)
            {
                arr[i] = int.Parse(Console.ReadLine());
                if (i != 0)
                {
                    if (arr[i] > arr[i - 1])
                    {
                        currentCount++;
                    }
                    else
                    {
                        currentCount = 1;
                    }
                    if (currentCount > maxCount)
                    {
                        maxCount = currentCount;
                    }
                }
            }
            Console.WriteLine(maxCount);
        }

        else { }
        }
    }

06. Maximal K sum------------------------------------------------

using System;


class Program
{
    static void Main()
    {
        int n = int.Parse(Console.ReadLine());
        int k = int.Parse(Console.ReadLine());
        int[] arr = new int[n];
        int sum = 0;
        if(n >= 1 && n <= 1024 && k >= 1 && k <= n)
        {
            for (int i = 0; i < n; i++)
            {
                arr[i] = int.Parse(Console.ReadLine());
            }
            Array.Sort(arr);

                for (int j = arr.Length - 1; j >= arr.Length - k; j--)
                {  
                        sum += arr[j];
                }
        }
        Console.WriteLine(sum);
    }
}

07. Selection sort-------------------------------------------

using System;


class Program
{
    static void Main()
    {
        int n = int.Parse(Console.ReadLine());
        int[] arr = new int[n];

        for (int i = 0; i < n; i++)
        {
            arr[i] = int.Parse(Console.ReadLine());
        }
        Array.Sort(arr);

        for (int i = 0; i < n; i++)
        {
            Console.WriteLine(arr[i]);
        }
    }
}

08. Maximal sum---------------------------------------------

using System;
    class MainClass
    {
        public static void Main()
        {
            int N = int.Parse(Console.ReadLine());
            int[] arr = new int[N];
            int max = 0;
            int temp = 0;

            for (int i = 0; i < N; i++)
            {
                arr[i] = int.Parse(Console.ReadLine());
                temp = Math.Max(arr[i], temp + arr[i]);
                if (temp > max)
                {
                    max = temp;
                }
            }
            Console.Write(max);
        }
    }

09. Frequent number----------------------------------------

using System;

class FindMostFriquetNumber
{
    static void Main()
    { 
        int n = int.Parse(Console.ReadLine());
        int[] arr = new int[n];
        int maxCount = int.MinValue;
        int currentCount = 1;
        int number = 0;
        for (int i = 0; i < n; i++)
        {  
            arr[i] = int.Parse(Console.ReadLine());
        }
        Array.Sort(arr);
        for (int i = 1; i < n; i++)
        {
            if (arr[i] == arr[i - 1])
            {
                currentCount++;
            }
            else
            {
                currentCount = 1;
            }
            if (currentCount > maxCount)
            {
                maxCount = currentCount;
                number = arr[i];
            }
        }
        if (n == 1)
        {
            maxCount = 1;
            number = arr[0];
        }
        Console.WriteLine("{0} ({1} times)", number, maxCount);
    }
}

11. Binary search-------------------------------------------

using System;

class FindMostFriquetNumber
{
    static void Main()
    {
        int n = int.Parse(Console.ReadLine());
        int[] arr = new int[n];

        for (int i = 0; i < n; i++)
        {
            arr[i] = int.Parse(Console.ReadLine());
        }

        int x = int.Parse(Console.ReadLine());
        int place = 0;

        for (int i = 0; i < n; i++)
        {
            if (x == arr[i])
            {
                place = i;
                break;
            }

            else
            {
                place = -1;
                continue;
            }
        }
        Console.WriteLine(place);
    }  
}

12. Index of letters----------------------------------------------

using System;

class FindMostFriquetNumber
{
    static void Main()
    {
        char[] arr = new char[]{'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};

        string word = Console.ReadLine();
        char[] arrWord = word.ToCharArray();

        int current = 0;

        for (int i = 0; i < arr.Length; i++)
        {
            if (current < arrWord.Length)
            {
                if (arrWord[current] == arr[i])
                {
                    Console.WriteLine(i);
                    current++;
                    i = -1;
                }
                else
                {
                    continue;
                }
            }
        }
    }  
}



